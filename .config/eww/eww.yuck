; common
(defwidget base [icon text]
    (box  :class "base" :space-evenly false
        (label  :class "base-icon"
                :text icon)
        (label  :class "base-text"
                :text text)))

; workspace
; clock
(defpoll dt :interval "1s" "date '+%Y/%m/%d %H:%M:%S'")
(defwidget clock []
    (base :icon "" :text {dt}))

;calendar
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_month :interval "10h" "scripts/calendar")
(defpoll calendar_year :interval "10h" "date '+%Y'")
(defwidget cal []
    (calendar :class "cal"
              :day calendar_day
              :month calendar_month
              :year calendar_year))

; battery
(defpoll _battery :interval "30s" "cat /sys/class/power_supply/BAT0/capacity")
(defwidget battery []
    (base :icon "" :text {_battery}))

; wifi
(defpoll _wifi :interval "1s" "nmcli c | grep -e 'wlp' | awk '{print ($1)}'")
(defwidget wifi []
    (base :icon "" :text {_wifi}))

; apps
; system trayが実装されたら

; now playing
(defpoll _playing :interval "1s" "playerctl metadata --format '{{ title }}'")
(defwidget now_playing []
    (button _playing)
)
;cpu
(defwidget cpu []
    (base :icon ""
           :text "${round(EWW_CPU.avg,0)}%"
    )
)
;mem
(defwidget mem []
    (base :icon "󰍛"
          :text "${round(EWW_RAM.used_mem_perc,0)}%"
    )
)
;storage
(defwidget storage []
    (base :icon ""
          :text "${round(EWW_DISK['/'].used_perc, 0)}%"
    )
)
;bluetooth
; notification
(defpoll notify_icon :interval "1s" "python scripts/notify_icon.py")
(defwidget notification []
    (button :onclick "makoctl mode | grep 'do-not-disturb' && makoctl mode -r do-not-disturb || makoctl mode -a do-not-disturb;"
        {notify_icon})
)
;light
(defpoll _light :interval "0.3s" "light")
(defwidget light []
    (base :icon "l"
          :text {_light}
    )
)
;volume
(defpoll _volume :interval "0.3s" "pactl get-sink-volume 0 | grep '^Volume:' | cut -d / -f 2 | tr -d ' '")
(defwidget volume []
    (base :icon "v"
          :text {_volume}
    )
)
; power
(defwidget power []
    (box
        :space-evenly false
        :spacing 8
        (button :onclick "shutdown now" "  shutdown")
        (button :onclick "reboot" "  reboot")
        (button :onclick "playerctl pause; swaylock -f" " lock")
    )
)
(defwidget bar []
    (box :orientation "h"
        :class "bar"
        :space-evenly false
        :spacing 8
        ;(workspaces)
        (clock)
        (battery)
        (wifi)
        (cpu)
        (mem)
        (storage)
        ;(now_playing)
        (volume)
        (light)
        (notification)
        (power)
    )
)
(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :anchor "top center")
  :exclusive true
  (bar)
)