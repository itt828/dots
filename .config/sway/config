set $color0  #141a1b
set $color1  #282a2b
set $color2  #3B758C
set $color3  #41535B
set $color4  #43a5d5
set $color5  #d6d6d6
set $color6  #222222
set $color7  #ffffff
set $color8  #Cd3f45
set $color9  #db7b55
set $color10 #e6cd69
set $color11 #9fca56
set $color12 #16a085
set $color13 #55b5db
set $color14 #a074c4
set $color15 #8a553f

#$color0
set $background-color $color0
#$color6
set $text-color $color6
#color1
set $selection-color $color1
#color12
set $accent-color $color12

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG       Text    Indicator Child Border
client.focused          $color5 $color12 $color0 $color6   $color12
client.focused_inactive $color1 $color1  $color5 $color3   $color1
client.unfocused        $color1 $color0  $color5 $color6   $color1
client.urgent           $color8 $color8  $color0 $color9   $color8
client.placeholder      $color0 $color0  $color5 $color0   $color0
client.background       $color7

### Variables
#
# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4

# Direction keys
set $left Left
set $down Down
set $up Up
set $right Right

# Alternative direction keys
set $left_alt h
set $down_alt j
set $up_alt k
set $right_alt l

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# For user's convenience, the same for unbindsym
set $unbindsym unbindsym --to-code

# background
set $background /usr/share/backgrounds/manjaro-sway/gruvbox-dark-manjarosway-3840x2160.png

# Your preferred terminal emulator
set $term wezterm
set $term_cwd wezterm start --cwd "$(swaycwd 2>/dev/null || echo $HOME)"
set $term_float footclient -a floating_shell

# onscreen bar
set $onscreen_bar bash /usr/share/sway/scripts/wob.sh "$accent-color" "$background-color"

# brightness control
set $brightness_step bash -c 'echo $(( $(light -Mr) / 100 * 5 < 1 ? 1 : $(( $(light -Mr) / 100 * 5 )) ))'
set $brightness_up light -r -A $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)
set $brightness_down light -r -U $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $onscreen_bar $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $onscreen_bar $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# rofi theme
set $rofi_theme "* {\nlightbg: $background-color;\nbackground: $background-color;\nlightfg: $accent-color;\nforeground: $text-color;\n}"

# clipboard history
set $clipboard cliphist list | rofi -dmenu -font "$gui-font" -p "Select item to copy" -lines 10 -width 35 | cliphist decode | wl-copy
set $clipboard-del cliphist list | rofi -dmenu -font "$gui-font" -p "Select item to delete" -lines 10 -width 35 | cliphist delete

# zeit tracking
set $zeit_list zeit list --only-projects-and-tasks --append-project-id-to-task | \
    rofi -dmenu -font "$gui-font" -p "Select task to track" -lines 10 -width 35 | \
    /usr/share/sway/scripts/zeit.sh track && \
    pkill -RTMIN+10 waybar

# Your preferred application launcher
set $menu rofi -show combi -combi-modi "drun,run" -terminal $term -ssh-command "{terminal} {ssh-client} {host} [-p {port}]" -run-shell-command "{terminal} {cmd}" -show-icons -font "$gui-font" -lines 10 -width 35

### Lockscreen configuration
set $locking swaylock --daemonize --color "$selection-color" --inside-color "$selection-color" --inside-clear-color "$text-color" --ring-color "$color2" --ring-clear-color "$color11" --ring-ver-color "$color13" --show-failed-attempts --fade-in 0.2 --grace 2 --effect-vignette 0.5:0.5 --effect-blur 7x5 --ignore-empty-password --screenshots --clock

# bluetooth menu
set $bluetooth $term_float bluetuith

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $idle_timeout 24000
set $locking_timeout 18000
set $screen_timeout 60000
set $swayidle swayidle -w \
    timeout $idle_timeout 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    timeout $locking_timeout 'exec $locking' \
    timeout $screen_timeout 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'playerctl pause' \
    before-sleep 'exec $locking'

# statusbar command
#set $statusbar waybar
#set $waybar_position top

# pulseaudio command
set $pulseaudio $term_float pulsemixer

# help command
set $help /usr/share/sway/scripts/help.sh --toggle

# calendar application
set $calendar $term_float calcurse

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# screenshot
set $grimshot /usr/share/sway/scripts/grimshot
set $pipe_output $grimshot save output -
set $pipe_selection $grimshot save window -
set $notify_paste  [[ $(wl-paste -l) == "image/png" ]] && notify-send "Screenshot copied to clipboard"
set $swappy swappy -f -
set $swappy_pipe swappy -f - -o -
set $upload_pipe curl -s -F "file=@-;filename=.png" https://x0.at/ | tee >(wl-copy) >(xargs notify-send)

set $screenshot_screen $pipe_output | $swappy && $notify_paste
set $screenshot_screen_upload $pipe_output | $swappy_pipe | $upload_pipe

set $screenshot_selection $pipe_selection | $swappy && $notify_paste
set $screenshot_selection_upload $pipe_selection | $swappy_pipe | $upload_pipe

# autostarts
set $autostart_dex '[ -x "$(command -v dex)" ] && gdbus wait --session org.kde.StatusNotifierWatcher && dex --autostart'
set $flashfocus '[ -x "$(command -v flashfocus)" ] && flashfocus'
set $wlsunset '[ -x "$(command -v wlsunset)" ] && /usr/share/sway/scripts/sunset.sh "on"'
set $autotiling '[ -x "$(command -v autotiling)" ] && autotiling'
set $foot_server '[ -x "$(command -v foot)" ] && /usr/share/sway/scripts/foot.sh --server'
set $help_menu '[ -x "$(command -v nwg-wrapper)" ] && [ -f $HOME/.config/nwg-wrapper/help.sh ] && /usr/share/sway/scripts/help.sh'
set $workspace_icons '[ -x "$(command -v sworkstyle)" ] && sworkstyle -d -l info &> /tmp/sworkstyle.log'
set $mounting_daemon '[ -x "$(command -v pcmanfm)" ] && pcmanfm -d'
# restart kanshi https://github.com/emersion/kanshi/issues/43#issuecomment-531679213
set $kanshi '[ -x "$(command -v kanshi)" ] && pkill kanshi; exec kanshi'
# apply the keyboard layout from localectl if no keyboard layout has been set via config.d
set $auto_xdg_keyboard 'grep -q xkb_layout ~/.config/sway/config.d/*.conf || /usr/share/sway/scripts/keyboard.sh'
set $update_rofi_theme 'mkdir -p $HOME/.config/rofi/ && echo $rofi_theme > $HOME/.config/rofi/Manjaro.rasi'
set $create_rofi_config '[ ! -f $HOME/.config/rofi/config.rasi ] && echo '@import \\"Manjaro\\"' > $HOME/.config/rofi/config.rasi'

# daemons

set $swappy_notify '[ -x "$(command -v swappy)" ] && /usr/share/sway/scripts/screenshot-notify.sh'
set $poweralert '[ -x "$(command -v poweralertd)" ] && pkill poweralertd; poweralertd -s -i "line power" &'
set $swayr_daemon '[ -x "$(command -v swayrd)" ] && pkill swayrd; RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd &> /tmp/swayrd.log'
set $cliphist_watch '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch pkill -RTMIN+9 waybar'
set $cliphist_store '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch cliphist store'
set $calendar_daemon 'calcurse --daemon'
set $nm_applet '[ -x "$(command -v nm-applet)" ] && nm-applet'
set $watch_playerctl '[ -x "$(command -v playerctl)" ] && pkill playerctl; playerctl -a metadata --format \'{{status}} {{title}}\' --follow | while read line; do pkill -RTMIN+5 waybar; done'

# output * bg $background fill
output * bg #e1e8ec solid_color

# enable modes
include ./modes/*

# systemd user
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

# enable theme
set $gtk-theme Catppuccin-Latte-Standard-Yellow-Light
set $icon-theme Papirus-Dark-Maia
set $cursor-theme xcursor-breeze
set $gui-font Roboto 11
set $term-font RobotoMono Nerd Font 14
set $gtk-color-scheme prefer-dark
set $kvantum-theme Matcha-Dark

exec_always {
  gsettings set org.gnome.desktop.interface gtk-theme "$gtk-theme"
  gsettings set org.gnome.desktop.interface icon-theme "$icon-theme"
  gsettings set org.gnome.desktop.interface cursor-theme "$cursor-theme"
  gsettings set org.gnome.desktop.interface font-name "$gui-font"
  gsettings set org.gnome.desktop.interface color-scheme "$gtk-color-scheme"
  gsettings set org.gnome.desktop.input-sources show-all-sources true
  gsettings set org.gnome.desktop.interface monospace-font-name "$term-font"

  kvantummanager --set "$kvantum-theme"
}

#generate help
exec_always sed '/^.SH SHORTCUTS$/r'<(/usr/share/sway/scripts/sbdp.py $HOME/.config/sway/config man) /usr/share/sway/templates/help.man > $HOME/.config/sway/help.man

# waybar config
#bar {
#    id default
#    swaybar_command /usr/share/sway/scripts/waybar.sh
#    position top
#}


# application defaults
#don't show gaps if there's only one window on the desktop
smart_gaps on

# set floating mode for specific applications
for_window [instance="lxappearance"] floating enable
for_window [app_id="pamac-manager"] floating enable
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="dragon-drop"] floating enable, sticky enable
for_window [app_id="firefox" title="^Library$"] floating enable, border pixel 1, sticky enable
for_window [app_id="thunderbird" title=".*Reminder"] floating enable
for_window [app_id="floating_shell"] floating enable, border pixel 1, sticky enable
for_window [app_id="Manjaro.manjaro-settings-manager"] floating enable
for_window [app_id="" title="Picture in picture"] floating enable, sticky enable
for_window [app_id="" title="Picture-in-Picture"] floating enable, sticky enable
for_window [instance="around"] floating enable, sticky enable
for_window [app_id="xsensors"] floating enable
for_window [title="Save File"] floating enable
for_window [title="Firefox .*— Sharing Indicator"] floating enable, sticky enable, move to scratchpad
for_window [app_id="" title=".* is sharing your screen."] floating enable
for_window [title="^wlay$"] floating enable

# inhibit idle
for_window [app_id="microsoft teams - preview"] inhibit_idle fullscreen
for_window [app_id="google-chrome"] inhibit_idle fullscreen
for_window [app_id="google-chrome-beta"] inhibit_idle fullscreen
for_window [app_id="google-chrome-unstable"] inhibit_idle fullscreen

# Don't allow applications to inhibit shortcuts, i.e. grab total control of the
# keyboard. Chrome currently abuses this by enabling it for all "--app=..."
# shortcuts.
seat * shortcuts_inhibitor disable

# autostart applications
# autostart background applications
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# autostarts
exec {
    $swayidle
    $swappy_notify
    $autostart_dex
    $flashfocus
    $autotiling
    $foot_server
    $help_menu
    $cliphist_store
    $cliphist_watch
    $workspace_icons
    $mounting_daemon
    eww daemon && eww open bar
    mako
}

exec_always {
    $kanshi
    $auto_xdg_keyboard
    $poweralert
    $watch_playerctl
    $calendar_daemon
    $update_rofi_theme
    $create_rofi_config
    $swayr_daemon
}

# https://github.com/Alexays/Waybar/issues/1093#issuecomment-841846291
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
    dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway
exec --no-startup-id fcitx5 -d

output eDP-1 scale 1.0

input * {
    xkb_layout "jp"
    xkb_model "jp106"
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.5
}